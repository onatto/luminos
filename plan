-- "math.sin" xform = math/sin.xform
-- File can be a xform group, then it acts as a namespace too
-- What about the math.xform.sin vs math/sin.xform conflict
-- Can't be "math.sin" then, has to be "math.sin.sin"
-- Can have a core folder, so can just say "core.math.sin"
-- "math.fft"

xform sin

-- One can generate anything from those values
-- Even C functions
inputs:
    f32 rad
    f32 frequency
    f32 amplitude

outputs:
    f32 sin

xform:
-- This is regular Lua code or maybe unsafe C code that gets compiled on the run by tcc
out.sin = math.sin(in.rad * in.frequency) * in.amplitude

Expand these to cached table accesses
Learn all about luajit optimizations

Should do a lot of compiler optimization raedings, testings, Valgrind, gdb learning before optimization.
Should build a comprehensive optimizing toolchain for optimizing.
That should come later.

Should design with concurrency in mind, write a job system where master assigns jobs to threads
This should also come later, but not unplanned. Redirect thread job output(essentially a Lua table) or just memcpy data and pass that between threads(C)
